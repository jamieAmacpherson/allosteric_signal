#____________________________________________________________________________
# Compute convergence and similarity in mutual information space, between
# MD trajectories and over time within a single MD trajectory.
#
# Copyright 2017 Francis Crick Institute, King's College London
# and the Authors.
# 
# Author(s): Jamie A. Macpherson
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with GSAtools. If not, see <http://www.gnu.org/licenses/>.
#____________________________________________________________________________
# Imports
#____________________________________________________________________________
import argparse
import os.path
import sys
import numpy as np
import subprocess
import itertools as it
from numpy import linalg as LA

#____________________________________________________________________________
# Read in mutual information matrix blocks generated by the GSAtools
# suite of programs.
#____________________________________________________________________________





#____________________________________________________________________________
# Compute the cosine content:
#
# Mutual information matrices A and B are subjected to a spectral
# decomposition, to generate vectors of eigenvalues and matrices of 
# eigenvectors. The cosine content between the two matrices of eigenvectors
# is computed as a measure of matrix similarity.
#____________________________________________________________________________
def cosine.content(mat.A, mat.B):
	if np.shape(mat.A) != np.shape(mat.B):
		print "matrices must be of equal dimensions"
	else:
		print "Computing cosine content"
	
	eigenvals.A, eigenvects.A = LA.eig(mat.A) 




#____________________________________________________________________________
# Compute the covariance overlap:  
#
# Mutual information matrices A and B are subjected to a spectral
# decomposition, to generate vectors of eigenvalues and matrices of 
# eigenvectors. The covariance overlap is calculated by scaling the 
# cosine between eigenvectors A and B by the geometric mean of the respective
# eigenvalues.
#____________________________________________________________________________






